{"ignition":{"version":"3.4.0"},"passwd":{"users":[{"groups":["root"],"name":"root","sshAuthorizedKeys":["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDFPly2MYEeh4FtFtftOa0qasGW4VNIzYv/ZzheQ/dFs martin@fedora"]}]},"storage":{"directories":[{"path":"/etc/ucore-autorebase","mode":492}],"files":[{"path":"/usr/local/bin/run-telegraf","contents":{"compression":"gzip","source":"data:;base64,H4sIAAAAAAAC/1JW1E/KzNNPSizO4OJKrSjILypRcA4NDvH3jQ/x93b1s1XRSE4sUdBPLUnWL0nNSU0vSkzTK8nPTs1TqFEoKVLQTVFQjylSh3NilDS5uPRLi4vAxsJ0KOjqJufnpWWmoxqkn1xaXJKfqws3GKSICxAAAP//r+PkO5MAAAA="},"mode":493},{"path":"/etc/telegraf/custom-telegraf.conf","contents":{"compression":"gzip","source":"data:;base64,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"},"mode":420},{"path":"/etc/containers/registries.conf.d/mirrors.conf","contents":{"compression":"gzip","source":"data:;base64,H4sIAAAAAAAC/4zMMQ7CMAxG4T3H8N7coCepOljGJFZpDT9Bajg9AnYr83v6lgVa7NnQ1zXdXLiZHzPtBjimi8ummMxzPbjptjPy2d+U7tCrnTP9h2xOKcVUkcgpMobUWKljzOPFPWC++cd8AgAA//9TBVH8HQEAAA=="},"mode":420},{"path":"/etc/yum.repos.d/telegraf.repo","contents":{"compression":"gzip","source":"data:;base64,H4sIAAAAAAAC/4SMzcrCMBAA73mKfYE2fPBRROjNi1c9ipRtujYhvyRbad5eWpAePc4wzMOEl1vWCRmfIqAn6OG6qwsywo1SLIZjrtDAnXF0JEYstGQHPWjmVM5S5q1qj1Oropdlr+V66obuX3o0QVDY1AQ9/Ik5zUqTsl+wVH8dD2wwK23eNKjoE3JrqYpPAAAA//9U0uFgygAAAA=="},"mode":493},{"path":"/etc/profile.d/zz-defaults.sh","contents":{"compression":"","source":"data:,export%20EDITOR%3Dvim%0A"}},{"path":"/etc/profile.d/zz-openbao.sh","contents":{"compression":"","source":"data:,export%20VAULT_ADDR%3Dhttps%3A%2F%2Fopenbao.hnatekmar.xyz%0Aexport%20BAO_ADDR%3Dhttps%3A%2F%2Fopenbao.hnatekmar.xyz"},"mode":493},{"path":"/etc/proxy.env","contents":{"compression":"","source":"data:,http_proxy%3D%22http%3A%2F%2F172.16.100.61%3A3128%22"},"mode":420}],"links":[{"path":"/etc/localtime","target":"../usr/share/zoneinfo/Europe/Prague"}]},"systemd":{"units":[{"mask":true,"name":"docker.service"},{"contents":"[Unit]\nDescription=Retrieve token from Vault for telegraf\nConditionPathExists=/root/.vault-token\nConditionPathExists=!/etc/telegraf.token\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/bash -c '/usr/bin/podman run -e BAO_ADDR=https://openbao.hnatekmar.xyz -e VAULT_TOKEN=$(cat /root/.vault-token) -ti quay.io/openbao/openbao kv get -format=json -field=influx_token secret/servers/common | tr -d \\\"  \u003e /etc/telegraf.token'\n\n[Install]\nWantedBy=default.target\n","enabled":true,"name":"telegraf-env.service"},{"contents":"[Unit]\nDescription=The plugin-driven server agent for reporting metrics into InfluxDB\nDocumentation=https://github.com/influxdata/telegraf\nAfter=network.target\nConditionPathExists=/etc/telegraf.token\n\n[Service]\nType=simple\nExecStart=/bin/bash /usr/local/bin/run-telegraf\nRestart=on-failure\nStandardOutput=syslog\nStandardError=syslog\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"telegraf.service"},{"contents":"[Unit]\nDescription=Layer vim with rpm-ostree\nWants=network-online.target\nAfter=network-online.target\n\n# We run before `zincati.service` to avoid conflicting rpm-ostree\n# transactions.\nBefore=zincati.service\nConditionPathExists=!/var/lib/%N.stamp\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\n# `--allow-inactive` ensures that rpm-ostree does not return an error\n# if the package is already installed. This is useful if the package is\n# added to the root image in a future Fedora CoreOS release as it will\n# prevent the service from failing.\nExecStart=/usr/bin/rpm-ostree install --allow-inactive -y vim telegraf\nExecStart=/bin/touch /var/lib/%N.stamp\nExecStart=/bin/systemctl --no-block reboot\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"rpm-ostree-install-base.service"},{"dropins":[{"contents":"[Service]\nEnvironmentFile=/etc/proxy.env\n","name":"99-proxy.conf"}],"enabled":true,"name":"containerd.service"}]}}
